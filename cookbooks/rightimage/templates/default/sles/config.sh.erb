#!/bin/bash
#================
# FILE          : config.sh
#----------------
# PROJECT       : OpenSuSE KIWI Image System
# COPYRIGHT     : (c) 2006 SUSE LINUX Products GmbH. All rights reserved
#               :
# AUTHOR        : Marcus Schaefer <ms@suse.de>
#               :
# BELONGS TO    : Operating System images
#               :
# DESCRIPTION   : configuration script for SUSE based
#               : operating systems
#               :
#               :
# STATUS        : BETA
#----------------
#======================================
# Functions...
#--------------------------------------
test -f /.kconfig && . /.kconfig
test -f /.profile && . /.profile

#======================================
# Greeting...
#--------------------------------------
echo "Configure image: [$kiwi_iname]..."

#======================================
# Setup baseproduct link
#--------------------------------------
# currently broken in the version of kiwi used for building these images
# [bnc#637996]
# suseSetupProduct
ln -sf /etc/products.d/SUSE_SLES.prod /etc/products.d/baseproduct

#=========================================
# Set sysconfig options
#-----------------------------------------

# Not using yast2 syconfig, because it has side effects
function setsc()
{
# $1 = file, $2 = varname, $3 = value
	# regex for zero or more spaces
	local S='[[:space:]]*'
	sed -i -r -e "s%^($S$2$S=$S).*%\1\"$3\"%" "$1"
}

function has_key() {
    local S='[[:space:]]*'
    egrep -q "^$S$2$S=$S" "$1"
    return $?
}

function set_key() {
	setsc "$1" "$2" "$3"
}

function ensure_key() {
    if has_key "$1" "$2"; then
        set_key "$1" "$2" "$3"
    else
        echo "$2=\"$3\"" >> "$1"
    fi
}

# These are all set by YaST but not by KIWI
setsc /etc/sysconfig/boot RUN_PARALLEL no
setsc /etc/sysconfig/bootloader LOADER_TYPE grub 
setsc /etc/sysconfig/clock HWCLOCK "-u"
setsc /etc/sysconfig/clock TIMEZONE UTC
setsc /etc/sysconfig/console CONSOLE_FONT "lat9w-16.psfu"
setsc /etc/sysconfig/console CONSOLE_SCREENMAP trivial
setsc /etc/sysconfig/kernel INITRD_MODULES "xenblk jbd ext3"
setsc /etc/sysconfig/keyboard COMPOSETABLE "clear latin1.add"
setsc /etc/sysconfig/language INSTALLED_LANGUAGES ""
setsc /etc/sysconfig/mouse MOUSEDEVICE ""
#setsc /etc/sysconfig/network/config NETCONFIG_DNS_STATIC_SEARCHLIST "amazonaws.novell.com"
setsc /etc/sysconfig/network/dhcp DHCLIENT_SET_HOSTNAME yes
setsc /etc/sysconfig/network/dhcp WRITE_HOSTNAME_TO_HOSTS no
setsc /etc/sysconfig/security POLKIT_DEFAULT_PRIVS restrictive
setsc /etc/sysconfig/storage USED_FS_LIST ext3
setsc /etc/sysconfig/suseconfig CWD_IN_USER_PATH no
setsc /etc/sysconfig/SuSEfirewall2 FW_LOAD_MODULES "nf_conntrack_netbios_ns"
setsc /etc/sysconfig/SuSEfirewall2 FW_DEV_EXT "any eth0"
setsc /etc/sysconfig/SuSEfirewall2 FW_LOG_DROP_CRIT yes
setsc /etc/sysconfig/SuSEfirewall2 FW_LOG_DROP_ALL no
setsc /etc/sysconfig/SuSEfirewall2 FW_LOG_ACCEPT_CRIT yes
setsc /etc/sysconfig/SuSEfirewall2 FW_LOG_ACCEPT_ALL no
setsc /etc/sysconfig/SuSEfirewall2 FW_ALLOW_FW_BROADCAST_EXT no
setsc /etc/sysconfig/SuSEfirewall2 FW_ALLOW_FW_BROADCAST_INT no
setsc /etc/sysconfig/SuSEfirewall2 FW_ALLOW_FW_BROADCAST_DMZ no
setsc /etc/sysconfig/SuSEfirewall2 FW_IGNORE_FW_BROADCAST_INT no
setsc /etc/sysconfig/SuSEfirewall2 FW_IGNORE_FW_BROADCAST_DMZ no
setsc /etc/sysconfig/SuSEfirewall2 FW_IPSEC_TRUST no
setsc /etc/sysconfig/suse_register SUBMIT_OPTIONAL true
setsc /etc/sysconfig/suse_register SUBMIT_HWDATA true
setsc /etc/sysconfig/windowmanager X_MOUSE_CURSOR ""
setsc /etc/sysconfig/windowmanager DEFAULT_WM ""

# New entries in sysconfig
echo 'DEFAULT_TIMEZONE="UTC"' >> /etc/sysconfig/clock

echo '
# Encoding used for output of non-ascii characters.
#
CONSOLE_ENCODING="UTF-8"' >> /etc/sysconfig/console

echo '
# The YaST-internal identifier of the attached keyboard.
#
YAST_KEYBOARD="english-us,pc104"' >> /etc/sysconfig/keyboard

echo '
# The full name of the attached mouse.
#
FULLNAME=""

# The YaST-internal identifier of the attached mouse.
#
YAST_MOUSE="none"

# Mouse device used for the X11 system.
#
XMOUSEDEVICE=""

# The number of buttons of the attached mouse.
#
BUTTONS="0"

# The number of wheels of the attached mouse.
#
WHEELS="0"' >> /etc/sysconfig/mouse

echo 'DISPLAYMANAGER_SHUTDOWN="root"
DISPLAYMANAGER=""
DISPLAYMANAGER_REMOTE_ACCESS="no"
DISPLAYMANAGER_ROOT_LOGIN_REMOTE="no"' > /etc/sysconfig/displaymanager

rm /etc/sysconfig/mcelog

# Setup policy kit
[ -x /sbin/set_polkit_default_privs ] && /sbin/set_polkit_default_privs



# Setup console support for Xen
#  - add a serial console
#  - add the serial console as a secure console
AWKCMDS='{
  if ($0 ~ /\/agetty/) { 
    print $0 "\nx0:12345:respawn:/sbin/agetty -L 9600 xvc0 xterm" 
  } else { 
    print 
  }
}'
awk "$AWKCMDS" /etc/inittab > /etc/inittab.new
cat /etc/inittab.new > /etc/inittab
rm /etc/inittab.new
egrep -q '^xvc0$' /etc/securetty || echo xvc0 >> /etc/securetty

[ -f /etc/modprobe.d/unsupported-modules ] && sed -i -r -e 's/^(allow_unsupported_modules[[:space:]]*).*/\10/' /etc/modprobe.d/unsupported-modules

# Hostname setting
function setHN()
{
	[ -n "$1" ] || return 1
	local MYHN="$1"
	[ -f /etc/HOSTNAME ] && echo "$MYHN" > /etc/HOSTNAME
	[ -f /etc/postfix/main.cf ] && sed -i -r -e 's/^(myhostname = ).*/\1'"$MYHN"'/' /etc/postfix/main.cf
}

#setHN "sles11sp1-x86-64.amazonaws.novell.com"

IPV6="disabled"
if [ "$IPV6" = "disabled" ]; then
	echo 'install ipv6 /bin/true' > /etc/modprobe.d/50-ipv6.conf
	echo 'KDE_USE_IPV6="no"' >> /etc/sysconfig/windowmanager
else
	echo '#install ipv6 /bin/true' > /etc/modprobe.d/50-ipv6.conf
	echo 'KDE_USE_IPV6="yes"' >> /etc/sysconfig/windowmanager
fi

# we are deriving hvm images from regular images...
#if [ "$kiwi_iname" == "SLES11-SP1-EC2-hvm-guest" ]; then
#  # remove files not needed on hvm instances
#else
#  # remove files not needed no regular instances
#fi


#========================================
# Files that may vary from build to build
#----------------------------------------

# Keep track of files with randomly created unique IDs or random numbers
function random_file() { true ; }
random_file /etc/cron.d/novell.com-suse_register
random_file /etc/ntp.keys
random_file /zypp/credentials.d/NCCcredentials
random_file /var/lib/dbus/machine-id
random_file /var/lib/zypp/AnonymousUniqueId

# Keep track of files with embedded timestamps
function timestamp_file() { true ; }
timestamp_file /etc/gconf/gconf.xml.schemas/%gconf-tree.xml
timestamp_file /var/lib/PolicyKit/user-haldaemon.auths

# These caches are based only on data on the filesystem (system independent)
function cache_file() { true ; }
cache_file filesonly /etc/gtk-2.0/gdk-pixbuf64.loaders
cache_file filesonly /etc/gtk-2.0/gdk-pixbuf.loaders
cache_file filesonly /etc/gtk-2.0/gtk64.immodules
cache_file filesonly /etc/gtk-2.0/gtk.immodules
cache_file filesonly /etc/init.d/.depend.boot
cache_file filesonly /etc/init.d/.depend.halt
cache_file filesonly /etc/init.d/.depend.start
cache_file filesonly /etc/init.d/.depend.stop
cache_file filesonly /etc/rc.d/.depend.boot
cache_file filesonly /etc/rc.d/.depend.halt
cache_file filesonly /etc/rc.d/.depend.start
cache_file filesonly /etc/rc.d/.depend.stop
cache_file filesonly /etc/pango/pango64.modules
cache_file filesonly /etc/pango/pango.modules
cache_file filesonly /usr/share/info/dir
cache_file filesonly /var/adm/SuSEconfig/md5/etc/postfix/main.cf

#======================================
# Activate services
#--------------------------------------
insserv sshd
insserv amazon
insserv amazon-late
insserv sces-client
insserv -r boot.lvm
insserv -r boot.md
insserv -r kbd
insserv -r acpid 

#======================================
# SuSEconfig
#--------------------------------------
suseConfig

# EC2 Config
suse-ec2-configure --norefresh

#======================================
# Boot loader setup
#--------------------------------------
# Create initrd
echo "== Running mkinitrd =="
export rootdev=/dev/sda1
export rootfstype=ext3
# It doesn't really matter if this is correct; just make
# some block device that from the sd* family
# images.sh will remove it
mknod "$rootdev" b 8 1
mkinitrd -A
touch /boot/.rebuild-initrd

# Setup bootloader
KARGS="xencons=xvc0 console=xvc0 splash=silent showopts"
ROOTDEV=/dev/sda1

# We might not have a complete fstab here
fstabroot=$(awk '$2 == "/"' /etc/fstab)
if [ -z "$fstabroot" ]; then
	echo "$ROOTDEV / none defaults 0 0" >> /etc/fstab
fi

# Setup /boot/grub/device.map
echo -e "(hd0)\t${ROOTDEV}" > /boot/grub/device.map

# Setup /etc/grub.conf
echo 'setup --stage2=/boot/grub/stage2 --force-lba (hd0) (hd0)' > /etc/grub.conf
echo 'quit' >> /etc/grub.conf

product=$(fgrep '<summary>' /etc/products.d/baseproduct  | sed -r -e 's/^[^>]*>//;s/<.*//')

# copy grub files
cp /usr/lib/grub/stage[12] /boot/grub/
cp /usr/lib/grub/*_stage1_5 /boot/grub/

function make_grub_label {
    local IN="$1"
    local V=${IN%-*}
    local F=${IN##*-}
    local TCF=$(echo -n ${F:0:1} | tr '[:lower:]' '[:upper:]'; echo ${F:1})
    echo "title $TCF -- $product - $V"
}

# Setup /boot/grub/menu.lst
date=$(date)
cat >/boot/grub/menu.lst <<EOF
# Created in kiwi config.sh at $date
serial --unit=0 --speed=9600
terminal --dumb serial
default 0
timeout 0
hiddenmenu
##YaST - activate
EOF
ls /lib/modules | while read D; do
    [ -d "/lib/modules/$D" ] || continue
    echo "$D"
done | /usr/lib/rpm/rpmsort | tac | while read D; do
    for K in /boot/vmlinu[zx]-$D; do
        [ -f "$K" ] || continue
        echo >> /boot/grub/menu.lst
        echo "###Don't change this comment - YaST2 identifier: Original name: linux###" >> /boot/grub/menu.lst
        make_grub_label "$D" >> /boot/grub/menu.lst
        echo "    root (hd0)" >> /boot/grub/menu.lst
        echo "    kernel $K root=$ROOTDEV $KARGS" >> /boot/grub/menu.lst
        if [ -f "/boot/initrd-$D" ]; then
            echo "    initrd /boot/initrd-$D" >> /boot/grub/menu.lst
        fi
    done
done

# Setup /etc/sysconfig/bootloader
deft=$(egrep '^title ' /boot/grub/menu.lst | head -n 1 | sed -e 's/^title //')
ensure_key /etc/sysconfig/bootloader LOADER_TYPE grub
ensure_key /etc/sysconfig/bootloader DEFAULT_NAME "$deft"
ensure_key /etc/sysconfig/bootloader DEFAULT_APPEND "$KARGS" 
ensure_key /etc/sysconfig/bootloader DEFAULT_VGA ""
ensure_key /etc/sysconfig/bootloader FAILSAFE_APPEND "$KARGS"
ensure_key /etc/sysconfig/bootloader FAILSAFE_VGA ""
ensure_key /etc/sysconfig/bootloader XEN_KERNEL_APPEND "$KARGS"
ensure_key /etc/sysconfig/bootloader XEN_APPEND ""
ensure_key /etc/sysconfig/bootloader XEN_VGA ""

# Cleanup
rm /var/lib/rpm/__db.*

#======================================
# Umount kernel filesystems
#--------------------------------------
baseCleanMount

exit 0
