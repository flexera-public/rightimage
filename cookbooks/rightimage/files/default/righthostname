#!/bin/bash
# Copyright (c) 2009 by RightScale Inc., all rights reserved
# chkconfig: 2345 90 10
# description: This is the RightScale hostname script; it ensures the host has a FQDN
#   in order to work around bugs in Ohai and Chef.
#

hostname_ec2() {
    export CURL_OPT=(-s -S -f -L --retry 7)
    hostname=`curl "${CURL_OPT[@]}" -w ' %{http_code}' http://169.254.169.254/latest/meta-data/local-hostname | tr '.' ' ' | cut -f 1 -d ' '`
    hostname $hostname
    echo "127.0.0.1   localhost   localhost.localdomain $hostname" > /etc/hosts
    echo "$hostname" > /etc/hostname
}

hostname_generic() {
    # Learn the hostname and IP of this host
    PUBLIC_IP=`ifconfig eth0 | perl -wlne 'print $1 if /inet addr:([0-9.]+)/'`
    HOSTNAME=`hostname -s 2> /dev/null || hostname`

    # Ensure /etc/hosts doesn't contain an entry for our hostname
    grep -v "$HOSTNAME" /etc/hosts > /tmp/hosts
    cat /tmp/hosts > /etc/hosts
    rm /tmp/hosts

    # Add a fake FQDN to /etc/hosts
    grep -q $PUBLIC_IP /etc/hosts
    if [ $? != 0 ]; then
      echo "$PUBLIC_IP     ${HOSTNAME}.localdomain" >> /etc/hosts
    fi

    # Set the system's hostname using our fake FQDN
    hostname ${HOSTNAME}.localdomain
}

start() {
  # Only proceed if hostname not already fully qualified
  ( hostname --fqdn 2> /dev/null || hostname ) | grep -q '\.'
  if [ $? != 0 ]; then
    if test -e /etc/rightscale.d/cloud; then 
      cloud=`cat /etc/rightscale.d/cloud`
    fi
    if [ "$cloud" == "ec2" ]; then 
      hostname_ec2
    else
      hostname_generic
    fi
  fi
}

stop() {
  return 0
}

# See how we were called.
case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  *)
    echo "Usage: $0 start|stop"
    exit 255
    ;;
esac
